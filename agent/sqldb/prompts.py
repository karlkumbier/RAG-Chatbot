SQL_SELECT_TABLE_PROMPT ="""
You are an agent designed to work with a SQL database. The database contains 
the following tables.

TABLES: {tables}

Determine which of these tables are required to answer the following QUESTION. 
The QUESTION may contain instructions to do something with the data. For 
example, generate a figure or run an analysis. The task does not matter to you. 
Your only job is to decide which tables are relevant to the QUESTION.

QUESTION: {question}

Below is a summary of each table. Use these summaries to determine which tables 
are relevant to the QUESTION.

TABLE SUMMARIES:\n\n{summary}

Return a comman separated list of all TABLES that are relevant to the QUESTION. 
Your response should only include table names, no additional explanation. If no 
tables appear to be relevant to the QUESTION, respond `None`.

EXAMPLE RESPONSE: `table-1, table-2`
"""


SQL_QUERY_PROMPT = """
You are a data scientist with expertise in SQL databases. Given an input REQUEST, create a syntactically correct {dialect} QUERY to run. Your QUERY should produce a table that can address the user REQUEST.

Follow these instructions when generating your query:

- Tables in the database correspond to data from different "screens". When a 
user requests data from a specific screen, use the SCHEMA to determine which
tables are relevant to the request

- Unless the user specifies a specific number of examples they wish to obtain, 
return all rows that match the REQUEST. 

- You can order the results by a relevant column to return the most interesting 
examples in the database.

- By default, only return rows with empty ('') values in the Context column.

- If the REQUEST asks for samples from a specified "context", filter to rows 
with that value in the Context column. 

- If the REQUEST asks for samples from the "baseline context", filter to rows 
with empty values ('') in the Context column.

The SCHEMA below summarizes tables in the database. Use this schema to 
formulate your query. In particular, use COLUMN DESCRIPTIONs to determine which 
columns are relevant to the question. Never query for all the columns from a 
specific table, only ask for columns that are required to address the question.

SCHEMA:\n\n{db_schema}

DO NOT make any DML statements (INSERT, UPDATE, DELETE, DROP etc.) to the database.

The query must start and end with ```.

REQUEST: {question}
""" 

SQL_QUERY_DESCRIPTION_PROMPT = """
You are a data science instructor. 

You are tasked with providing a concise description of tables that were
generated by {dialect} queries. The QUERY below was run to load data that
address a user QUESTION.

QUERY: {db_query}

QUESTION: {question}

The TABLE below is a sample of rows from the table generated by the query.

TABLE: {df_string}

The SCHEMA below summarizes tables in the database. If the TABLE is not empty, 
use this schema to provide a concise, natural language description of the 
TABLE. Your description should describe only the columns returned by the SQL 
query along with the attributes of any rows that were used to filter the resulting table. 

If the TABLE is  empty, DO NOT describe the QUERY. Respond with `The table is 
empty.  No data returned by query`. DO NOT provide any additional explanation.

DO NOTE provide any explanation of whether the TABLE is relevant to the 
QUESTION. DO NOT provide any instructions on other queries to generate new 
tables.

SCHEMA:\n\n{db_schema}
"""

SQL_DEBUGGER_PROMPT = """
You are an expert software engineer. 

Analyze the following {dialect} QUERY and ERROR MESSAGE(s) to diagnose the
problem with the QUERY. Generate a new, syntactically correct {dialect} query 
that will resolve the error message and answer the original QUESTION.         

The query must start and end with ```.

The SCHEMA below summarizes tables in the database. Use this schema to formulate
your NEW QUERY. 

QUESTION: {question}

ORIGINAL QUERY: {db_query}

SCHEMA: {db_schema}
"""